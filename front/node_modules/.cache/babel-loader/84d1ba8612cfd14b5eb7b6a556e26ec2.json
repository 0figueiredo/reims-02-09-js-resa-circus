{"ast":null,"code":"var _jsxFileName = \"/home/wlder/workspace/checkpoint/checkpoint4/reims-02-09-js-resa-circus/front/resa-circus/src/Components/search.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n  listOfRegion: state.listOfRegion\n});\n\nconst Search = ({\n  listOfRegion\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"region-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    id: \"region-select\",\n    style: {\n      width: '66vw',\n      height: '13vh',\n      fontSize: '1.15rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Choose your Region\"), listOfRegion.map(region => React.createElement(\"option\", {\n    key: region.id,\n    id: region.id,\n    value: region.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, region.name))));\n};\n\nexport default connect(mapStateToProps)(Search);","map":{"version":3,"sources":["/home/wlder/workspace/checkpoint/checkpoint4/reims-02-09-js-resa-circus/front/resa-circus/src/Components/search.js"],"names":["React","connect","mapStateToProps","state","listOfRegion","Search","width","height","fontSize","map","region","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,YAAY,EAAED,KAAK,CAACC;AADU,CAAL,CAA7B;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAoB;AACjC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,EAAE,EAAC,eAAX;AAA2B,IAAA,KAAK,EAAE;AAChCE,MAAAA,KAAK,EAAE,MADyB;AAEhCC,MAAAA,MAAM,EAAE,MAFwB;AAGhCC,MAAAA,QAAQ,EAAE;AAHsB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,EAQGJ,YAAY,CAACK,GAAb,CAAiBC,MAAM,IACpB;AACA,IAAA,GAAG,EAAEA,MAAM,CAACC,EADZ;AAEA,IAAA,EAAE,EAAED,MAAM,CAACC,EAFX;AAGA,IAAA,KAAK,EAAED,MAAM,CAACE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIMF,MAAM,CAACE,IAJb,CADH,CARH,CAFF,CADF;AAqBD,CAtBD;;AAwBA,eAAeX,OAAO,CAACC,eAAD,CAAP,CAAyBG,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    listOfRegion: state.listOfRegion,\n  })\n\nconst Search = ({listOfRegion}) => {\n  return (\n    <div>\n      <label for=\"region-select\"></label>\n      <select id=\"region-select\" style={{\n        width: '66vw',\n        height: '13vh',\n        fontSize: '1.15rem',\n      }}>\n          <option value=\"\">\n              Choose your Region\n        </option>\n        {listOfRegion.map(region =>( \n            <option \n            key={region.id}\n            id={region.id}\n            value={region.name}>\n                {(region.name)}\n            </option>))} \n      </select>\n    </div>\n  );\n};\n    \nexport default connect(mapStateToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}